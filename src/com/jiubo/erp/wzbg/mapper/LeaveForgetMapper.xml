<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiubo.erp.wzbg.dao.LeavePrepareDao">
	<!-- 查询忘记打卡证明 -->
	<select id="queryLeaveForget" resultType="LeaveForgetBean">
	WITH A AS (
		SELECT ACC.Account_ID, ACC.Account_Name, DEPT.ID AS Dept_ID, DEPT.Name, POS.Position_ID
			, POS.Position_Name
		FROM Account_Data ACC
			LEFT JOIN T_Employee_Basic EMP ON ACC.Account_ID = EMP.Account
			LEFT JOIN T_Department DEPT ON EMP.Department_ID = DEPT.ID
			LEFT JOIN Position_Data POS ON ACC.Position_ID = POS.Position_ID
		WHERE EMP.IsDelete = '0'
			AND EMP.State = '1'
		GROUP BY ACC.Account_Name, ACC.Account_ID, DEPT.ID, DEPT.Name, POS.Position_ID, POS.Position_Name
	)
	SELECT B.id, B.leaveAccount, B.leaveAccountName, B.leaveDeptId, B.leaveDeptName
		, B.leavePositionId, B.leavePositionName, B.Reason, B.AddTime, B.StartTime
		, B.leaveRemark, C.accountR, C.witnessAccountName, C.witnessDeptId, C.witnessDeptName
		, C.witnessPositionId, C.witnessPositionName, C.resultR, C.remarkR, D.account1
		, D.examineAccountName, D.examineDeptId, D.examineDeptName, D.examinePositionId, D.examinePositionName
		, D.result1, D.remark1, E.account2, E.checkAccountName, E.checkDeptId
		, E.checkDeptName, E.checkPositionId, E.checkPositionName, E.result2, E.remark2
		, F.account3, F.approveAccountName, F.approveDeptId, F.approveDeptName, F.approvePositionId
		, F.approvePositionName, F.result3, F.remark3, G.account4, G.reportAccountName
		, G.reportDeptId, G.reportDeptName, G.reportPositionId, G.reportPositionName, G.result4
		, G.remark4
	FROM (
		SELECT L.ID AS id, L.Reason, L.AddTime, L.StartTime, L.Leave_Remark AS leaveRemark
			, A.Account_ID AS leaveAccount, A.Account_Name AS leaveAccountName, A.Dept_ID AS leaveDeptId, A.Name AS leaveDeptName, A.Position_ID AS leavePositionId
			, A.Position_Name AS leavePositionName
		FROM Leave_Forget L
			LEFT JOIN A ON L.LeaveAccount = A.Account_ID
	) B
		LEFT JOIN (
			SELECT L.ID, L.TimeR, L.ResultR, L.RemarkR, A.Account_ID AS accountR
				, A.Account_Name AS witnessAccountName, A.Dept_ID AS witnessDeptId, A.Name AS witnessDeptName, A.Position_ID AS witnessPositionId, A.Position_Name AS witnessPositionName
			FROM Leave_Forget L
				LEFT JOIN A ON L.AccountR = A.Account_ID
		) C
		ON B.ID = C.ID
		LEFT JOIN (
			SELECT L.ID, L.Time1, L.Result1, L.Remark1, A.Account_ID AS account1
				, A.Account_Name AS examineAccountName, A.Dept_ID AS examineDeptId, A.Name AS examineDeptName, A.Position_ID AS examinePositionId, A.Position_Name AS examinePositionName
			FROM Leave_Forget L
				LEFT JOIN A ON L.Account1 = A.Account_ID
		) D
		ON C.ID = D.ID
		LEFT JOIN (
			SELECT L.ID, L.Time2, L.Result2, L.Remark2, A.Account_ID AS account2
				, A.Account_Name AS checkAccountName, A.Dept_ID AS checkDeptId, A.Name AS checkDeptName, A.Position_ID AS checkPositionId, A.Position_Name AS checkPositionName
			FROM Leave_Forget L
				LEFT JOIN A ON L.Account2 = A.Account_ID
		) E
		ON D.ID = E.ID
		LEFT JOIN (
			SELECT L.ID, L.Time3, L.Result3, L.Remark3, A.Account_ID AS account3
				, A.Account_Name AS approveAccountName, A.Dept_ID AS approveDeptId, A.Name AS approveDeptName, A.Position_ID AS approvePositionId, A.Position_Name AS approvePositionName
			FROM Leave_Forget L
				LEFT JOIN A ON L.Account3 = A.Account_ID
		) F
		ON E.ID = F.ID
		LEFT JOIN (
			SELECT L.ID, L.Time4, L.Result4, L.Remark4, A.Account_ID AS account4
				, A.Account_Name AS reportAccountName, A.Dept_ID AS reportDeptId, A.Name AS reportDeptName, A.Position_ID AS reportPositionId, A.Position_Name AS reportPositionName
			FROM Leave_Forget L
				LEFT JOIN A ON L.Account4 = A.Account_ID
		) G
		ON F.ID = G.ID
		<where>
			<if test="beginTime !=null and beginTime !='' ">
				AND A.addTime <![CDATA[ >= ]]> #{beginTime}
			</if>
			<if test="endTime !=null and endTime !='' ">
				AND A.addTime <![CDATA[ <= ]]> #{endTime}
			</if>
			<if test="leaveDeptId != 0">
			 	<choose>
			 		<when test="leaveDeptId != null or leaveDeptId != '' ">
						EXISTS (
							SELECT
								DEPT.ID 
							FROM
								T_Department DEPT 
							WHERE
								B.leaveDeptId = DEPT.ID 
							AND ( DEPT.ID = 'leaveDeptId' OR DEPT.ParentID = 'leaveDeptId' )
						) 
			 		</when>
			 	</choose>
			</if>
			<if test="leaveAccountName != null and leaveAccountName">
				AND B.leaveAccountName like '%' + #{leaveAccountName} + '%'
			</if>
		</where>
		ORDER BY B.AddTime
	</select>
	
	<insert id="addLeaveForget" parameterType="LeaveForgetBean">
		INSERT INTO Leave_Forget (ID, Reason, LeaveAccount, AddTime, StartTime
			, Leave_Remark, AccountR, TimeR, ResultR, RemarkR
			, Account1, Time1, Result1, Remark1, Account2
			, Time2, Result2, Remark2, Account3, Time3
			, Result3, Remark3, Account4, Time4, Result4
			, Remark4, update_Time, isSee, step)
		VALUES (#{id}, #{reason}, #{leaveAccount}, #{addTime}, #{startTime}
			, #{leaveRemark}, #{accountR}, #{timeR}, #{resultR}, #{remarkR}
			, #{account1}, #{time1}, #{result1}, #{remark1}, #{account2}
			, #{time2}, #{result2}, #{remark2}, #{account3}, #{time3}
			, #{result3}, #{remark3}, #{account4}, #{time4}, #{result4}
			, #{remark4}, #{updateTime}, #{isSee}, #{step});
	</insert>
</mapper>